/* Generated by Yosys 0.16 (git sha1 4631d23fe, clang 10.0.0-4ubuntu1 -O0 -fPIC) */

(* top =  1  *)
(* src = "accum.sv:1.1-27.10" *)
module Accum(in, en, clock, reset, out);
  (* src = "accum.sv:12.3-23.6" *)
  wire [31:0] _00_;
  (* src = "accum.sv:12.3-23.6" *)
  wire _01_;
  (* src = "accum.sv:14.25-14.33" *)
  wire [31:0] _02_;
  (* src = "accum.sv:16.7-16.15" *)
  reg [31:0] _03_;
  (* src = "accum.sv:20.43-22.28" *)
  reg _04_;
  (* src = "accum.sv:20.43-22.28" *)
  reg _05_ = 1'h0;
  (* src = "accum.sv:20.7-20.15" *)
  reg [31:0] _06_;
  (* src = "accum.sv:9.16-9.19" *)
  reg [31:0] acc;
  (* src = "accum.sv:4.16-4.21" *)
  input clock;
  wire clock;
  (* src = "accum.sv:3.16-3.18" *)
  input en;
  wire en;
  (* src = "accum.sv:2.23-2.25" *)
  input [31:0] in;
  wire [31:0] in;
  (* src = "accum.sv:6.24-6.27" *)
  output [31:0] out;
  wire [31:0] out;
  (* src = "accum.sv:5.16-5.21" *)
  input reset;
  wire reset;
  (* src = "accum.sv:10.16-10.18" *)
  reg [31:0] xx;
  assign _02_ = acc + (* src = "accum.sv:14.25-14.33" *) in;
  assign _00_ = acc + (* src = "accum.sv:17.12-17.18" *) 32'd3;
  (* src = "accum.sv:12.3-23.6" *)
  always @(posedge clock)
    if (reset) acc <= 32'd0;
    else if (en) acc <= _02_;
  assign _01_ = acc <= (* src = "accum.sv:22.13-22.27" *) 32'd100;
  (* keep = 32'd1 *)
  (* src = "accum.sv:16.7-16.15" *)
  \$manticore  #(
    .FMT("%d"),
    .ORDER(32'd0),
    .VAR_ARG_NUM(32'd1),
    .VA_WIDTH_0(32'd32)
  ) _11_ (
    .A(1'hx),
    .EN(_05_),
    .VA_0(_03_)
  );
  (* keep = 32'd1 *)
  (* src = "accum.sv:18.7-18.15" *)
  \$manticore  #(
    .FMT("%d"),
    .ORDER(32'd1),
    .VAR_ARG_NUM(32'd1),
    .VA_WIDTH_0(32'd32)
  ) _12_ (
    .A(1'hx),
    .EN(_05_),
    .VA_0(xx)
  );
  (* keep = 32'd1 *)
  (* src = "accum.sv:20.7-20.15" *)
  \$manticore  #(
    .FMT("Hello %d, %d\n"),
    .ORDER(32'd2),
    .VAR_ARG_NUM(32'd2),
    .VA_WIDTH_0(32'd32),
    .VA_WIDTH_1(32'd32)
  ) _13_ (
    .A(1'hx),
    .EN(_05_),
    .VA_0(_03_),
    .VA_1(_06_)
  );
  (* keep = 32'd1 *)
  (* src = "accum.sv:20.43-22.28" *)
  \$manticore  #(
    .FMT("accum.sv:20.43-22.28"),
    .ORDER(32'd3),
    .TYPE("$assert"),
    .VAR_ARG_NUM(32'd0)
  ) _14_ (
    .A(_04_),
    .EN(_05_)
  );
  (* src = "accum.sv:12.3-23.6" *)
  always @(posedge clock)
    xx <= _00_;
  (* src = "accum.sv:12.3-23.6" *)
  always @(posedge clock)
    _03_ <= acc;
  (* src = "accum.sv:12.3-23.6" *)
  always @(posedge clock)
    _06_ <= in;
  (* src = "accum.sv:12.3-23.6" *)
  always @(posedge clock)
    _05_ <= 1'h1;
  (* src = "accum.sv:12.3-23.6" *)
  always @(posedge clock)
    _04_ <= _01_;
  assign out = acc;
endmodule
